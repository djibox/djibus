@page "/"
@using Microsoft.EntityFrameworkCore
@inject AuthenticationStateProvider GetAuthStateAsync
@inject IDbContextFactory<ApplicationDbContext> MyContextFactory
@using Telerik.Blazor

<PageTitle>Accueil</PageTitle>
<div>
    <div class="kd-border kd-rounded">
        @if (ChartData?.ProductAggregation != null)
        {
            <TelerikChart Height="230px">
                <ChartTooltip Visible="true" Shared="true"></ChartTooltip>
                <ChartTitle Text="Projects by period" />

                <ChartSeriesItems>
                    @foreach (var product in ChartData.ProductAggregation)
                    {
                        <ChartSeries Type="ChartSeriesType.Column"
                                        Name="@product.ProductName"
                                        Data="@product.ProductRevenueAndSales"
                                        Field="@nameof(ProductRevenueAndSalesModel.SalesCount)"
                                        CategoryField="@nameof(ProductRevenueAndSalesModel.Category)" />
                    }

                    <ChartSeries Type="ChartSeriesType.Line"
                                    Name="Total Revenue"
                                    Data="@ChartData.TotalAggregation"
                                    Field="@nameof(ProductRevenueAndSalesModel.Revenue)"
                                    Axis="RevenueAxis">
                    </ChartSeries>
                </ChartSeriesItems>

                <ChartValueAxes>
                    <ChartValueAxis>
                        <ChartValueAxisTitle Text="Sold items (thousands)" />
                        <ChartValueAxisMajorGridLines Visible="false" />
                    </ChartValueAxis>
                    <ChartValueAxis Name="RevenueAxis">
                        <ChartValueAxisTitle Text="Revenue" />
                        <ChartValueAxisLabels Format="{0:C}M" />
                        <ChartValueAxisMajorGridLines Visible="false" />
                    </ChartValueAxis>
                </ChartValueAxes>

                <ChartCategoryAxes>
                    <ChartCategoryAxis AxisCrossingValue="@(new object[] { 20, 0 })" />
                </ChartCategoryAxes>
            </TelerikChart>
        }
    </div>

    <div class="mt-md k-d-flex k-flex-wrap">
        <div class="k-flex-grow mb-md kd-border kd-rounded chart-item">
            @if (ChartData?.ProductAggregation != null)
            {
                <TelerikChart Height="230px">
                    <ChartTitle Text="Performance by project" />

                    <ChartSeriesItems>
                        @foreach (var item in ChartData.ProductAggregation)
                        {
                            <ChartSeries Type="ChartSeriesType.Line"
                                         Name="@item.ProductName"
                                         Data="@item.ProductRevenueAndSales"
                                         CategoryField="@nameof(ProductRevenueAndSalesModel.Category)"
                                         Field="@nameof(ProductRevenueAndSalesModel.Revenue)"
                                         Style="ChartSeriesStyle.Smooth">
                                <ChartSeriesMarkers Visible="false" />
                                <ChartSeriesTooltip Visible="true"></ChartSeriesTooltip>
                            </ChartSeries>
                        }
                    </ChartSeriesItems>

                    <ChartValueAxes>
                        <ChartValueAxis Name="RevenueAxis">
                            <ChartValueAxisTitle Text="Revenue" />
                            <ChartValueAxisLabels Format="{0:C}M" />
                        </ChartValueAxis>
                    </ChartValueAxes>
                </TelerikChart>
            }
        </div>

        <div class="k-flex-grow mb-md kd-border kd-rounded chart-item">
            @if (ChartData?.ProductAggregation != null && DonutData != null)
            {
                <TelerikChart Height="250px">
                    <ChartTitle Text="Demand Distribution for the Last Year" />

                    <ChartSeriesItems>
                        <ChartSeries Type="ChartSeriesType.Donut"
                                     Data="@DonutData"
                                     Field="SalesCount"
                                     CategoryField="ProductName">
                            <ChartSeriesLabels Visible="true"
                                               Template="#=category#"
                                               Background="transparent"
                                               Position="ChartSeriesLabelsPosition.OutsideEnd" />
                            <ChartSeriesTooltip Visible="true"></ChartSeriesTooltip>
                        </ChartSeries>
                    </ChartSeriesItems>

                    <ChartLegend Visible="false"></ChartLegend>
                </TelerikChart>
            }
        </div>
    </div>

    <div class="kd-border kd-rounded">
        @if (ChartData?.ProductAggregation != null)
        {
            <TelerikChart Height="230px">
                <ChartTitle Text="Project per Budget" />

                <ChartSeriesItems>
                    @foreach (var item in ChartData.ProductAggregation)
                    {
                        <ChartSeries Type="ChartSeriesType.Area"
                                        Name="@item.ProductName"
                                        Data="@item.ProductRevenueAndSales"
                                        Field="@nameof(ProductRevenueAndSalesModel.Revenue)"
                                        CategoryField="@nameof(ProductRevenueAndSalesModel.Category)">
                            <ChartSeriesStack Enabled="true" Type="ChartSeriesStackType.Stack100"></ChartSeriesStack>
                            <ChartSeriesLine Style="ChartSeriesLineStyle.Smooth"></ChartSeriesLine>
                            <ChartSeriesTooltip Visible="true"></ChartSeriesTooltip>
                        </ChartSeries>
                    }
                </ChartSeriesItems>

                <ChartValueAxes>
                    <ChartValueAxis>
                        <ChartValueAxisMajorGridLines Visible="false" />
                    </ChartValueAxis>
                </ChartValueAxes>

                <ChartCategoryAxes>
                    <ChartCategoryAxis>
                        <ChartCategoryAxisMajorGridLines Visible="false" />
                    </ChartCategoryAxis>
                </ChartCategoryAxes>
            </TelerikChart>
        }
    </div>
</div>

<style>
    .chart-item {
        width: 50%;
        min-width: 500px;
    }

    @@media only screen and (max-width:600px) {
        .chart-item {
            min-width: 250px;
        }
    }
</style>
@* <TelerikCard>
        <CardHeader>
            <CardTitle>Welcome to PMO Monitoring Tool (PMT) </CardTitle>
        </CardHeader>
        <CardImage Src="https://www.akuiteo.com/hubfs/editeurs-avantages-club-utilisateur.jpg"></CardImage>
        <CardBody>
            <CardTitle>PMO MONITORING TOOL</CardTitle>
            <CardSubTitle>Technologies used : Blazor and EF Core</CardSubTitle>
            <CardSeparator></CardSeparator>
            <p>
                This tool was designed for project and demand management within the African Development Bank.
            </p>
        </CardBody>
        <CardActions Layout="@CardActionsLayout.Stretched">
            <TelerikButton Class="k-flat" Icon="heart-outline">Like</TelerikButton>
            <TelerikButton Class="k-flat" Icon="share">Share</TelerikButton>
        </CardActions>
        <CardFooter>
            <span style="float:right">April, 2022</span>
        </CardFooter>
    </TelerikCard>*@